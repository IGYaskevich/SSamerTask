{"version":3,"sources":["api/api.ts","redux-store/app-reducer.ts","redux-store/UserReducer.tsx","redux-store/RepositoryReducer.tsx","commponents/Header/Input.tsx","commponents/Header/BasicBlock.tsx","commponents/UserInfo/User/UserBlock.tsx","commponents/Pagination/Pagination.tsx","commponents/UserInfo/Repository/RepositoryBlock.tsx","commponents/UserInfo/UserInfo.tsx","App.tsx","reportWebVitals.ts","redux-store/store.tsx","index.tsx","commponents/UserInfo/User/UserBlock.module.css","commponents/UserInfo/Repository/RepositoryBlock.module.css","commponents/Header/BasicBlock.module.css","commponents/UserInfo/UserInfo.module.css","App.module.css","commponents/Pagination/pagination.module.css"],"names":["instance","axios","create","baseURL","usersAPI","userName","get","reposAPI","page","slice","createSlice","name","initialState","status","show","error","pageCount","reducers","setStatusAC","state","action","payload","catchErrorAC","setPageCountAC","setPageAC","appReducer","reducer","actions","avatar_url","followers","login","following","html_url","public_repos","full_name","description","getReposTC","dispatch","then","result","type","data","catch","Input","React","memo","useDispatch","useState","setUserName","onInputChange","useCallback","e","currentTarget","value","trim","onEnterPress","key","setUserNameAC","findUserDataTC","TextField","onKeyPress","onChange","className","s","textField","size","placeholder","InputProps","startAdornment","InputAdornment","position","searchIcon","variant","BasicBlock","header","fontSize","gitGubIcon","UserBlock","countFollowers","countFollowing","userBlock","userInfo","blockAvatar","src","avatar","alt","href","hrefLogin","follow","personIcon","useStyles","makeStyles","theme","createStyles","root","marginTop","spacing","PaginationControlled","useSelector","app","classes","useEffect","Math","ceil","rootDiv","Typography","Pagination","count","event","RepositoryBlock","dataRepos","style","repositoriesBlock","rep","length","repositories","emptyList","map","item","index","listRepos","hrefNameRepositories","pagination","UserInfo","array","repos","user","countUsers","users","toString","toFixed","startSearch","all","App","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","window","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3e4c0266.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://api.github.com/users/`,\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUser(userName: string) {\r\n        return instance.get(`${userName}`)\r\n    }\r\n}\r\n\r\nexport const reposAPI = {\r\n    getUserRepos(userName: string | undefined, page: number = 1) {\r\n        return instance.get<any>(`${userName}/repos?page=${page}&per_page=5`)\r\n    }\r\n}\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n\r\ntype StatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type InitialAppReducerStateType = typeof initialState\r\nconst initialState = {\r\n    status: 'idle' as StatusType,\r\n    show: true,\r\n    error: false,\r\n    pageCount: 1,\r\n    page: 1\r\n}\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState,\r\n    reducers: {\r\n        setStatusAC: (state, action: PayloadAction<{ status: StatusType }>) => {\r\n            state.status = action.payload.status\r\n        },\r\n        catchErrorAC: (state, action: PayloadAction<{ error: boolean }>) => {\r\n            state.error = action.payload.error\r\n        },\r\n        setPageCountAC: (state, action: PayloadAction<{ pageCount: number }>) => {\r\n            state.pageCount = action.payload.pageCount\r\n        },\r\n        setPageAC: (state, action: PayloadAction<{ page: number }>) => {\r\n            state.page = action.payload.page\r\n        }\r\n    }\r\n})\r\nexport const appReducer = slice.reducer\r\nexport const {setStatusAC, catchErrorAC, setPageCountAC, setPageAC} = slice.actions\r\n","import React from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {ActionTypes, AppThunkType} from \"./Actions\";\r\nimport {setStatusAC} from \"./app-reducer\";\r\n\r\nexport type initialStateHeaderReducerPropsType = typeof initialState\r\nconst initialState = {\r\n    avatar_url: '',\r\n    name: '',\r\n    followers: 0,\r\n    login: '',\r\n    following: 0,\r\n    html_url: '',\r\n    public_repos: 0,\r\n}\r\n\r\n\r\nexport const headerReducer = (state: initialStateHeaderReducerPropsType = initialState, action: ActionTypes): initialStateHeaderReducerPropsType => {\r\n    switch (action.type) {\r\n        case \"userReducer/SET_USER_NAME\":\r\n            return {...state, ...action.payload}\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setUserNameAC = (avatar_url: string, name: string, followers: number, login: string, following: number,\r\n                              html_url: string, public_repos: number) => ({\r\n    type: 'userReducer/SET_USER_NAME', payload: {avatar_url, name, followers, login, following, html_url, public_repos}\r\n} as const)\r\n\r\nexport const findUserDataTC = (userName: string): AppThunkType => (dispatch: Dispatch<ActionTypes>) => {\r\n    dispatch(setStatusAC({status: 'loading'}))\r\n    usersAPI.getUser(userName)\r\n        .then(result => {\r\n            let {avatar_url, name, followers, login, following, html_url, public_repos} = result.data\r\n            dispatch(setUserNameAC(avatar_url, name, followers, login, following, html_url, public_repos))\r\n            dispatch(setStatusAC({status: 'succeeded'}))\r\n        })\r\n        .catch(() => {\r\n            dispatch(setStatusAC({status: 'failed'}))\r\n        })\r\n\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {reposAPI} from \"../api/api\";\r\nimport {ActionTypes, AppThunkType} from \"./Actions\";\r\nimport {catchErrorAC, setStatusAC} from \"./app-reducer\";\r\n\r\n\r\nexport type InitialStateReposPropsType = typeof initialState\r\n\r\nconst initialState = [\r\n    {\r\n        html_url: '',\r\n        name: '',\r\n        full_name: '',\r\n        description: ''\r\n    }\r\n]\r\n\r\nexport const userBlockReducer = (state: InitialStateReposPropsType = initialState, action: any): InitialStateReposPropsType => {\r\n    switch (action.type) {\r\n        case 'repositoryReducer/GET_REPOS_USER':\r\n            return [...action.payload]\r\n    }\r\n    return state\r\n}\r\n\r\nexport const getUserReposAC = (payload: InitialStateReposPropsType) => ({type: 'repositoryReducer/GET_REPOS_USER', payload} as const)\r\n\r\nexport const getReposTC = (userName: string | undefined, page: number): AppThunkType => (dispatch: Dispatch<ActionTypes>) => {\r\n    dispatch(setStatusAC({status: 'loading'}))\r\n    reposAPI.getUserRepos(userName, page)\r\n        .then(result => {\r\n            dispatch(getUserReposAC(result.data))\r\n            dispatch(setStatusAC({status: 'succeeded'}))\r\n        })\r\n        .catch(() => {\r\n            dispatch(catchErrorAC({error: true}))\r\n        })\r\n}\r\n\r\n","import React, {ChangeEvent, KeyboardEvent, useCallback, useState} from 'react';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {findUserDataTC} from \"../../redux-store/UserReducer\";\r\nimport {getReposTC} from \"../../redux-store/RepositoryReducer\";\r\nimport {catchErrorAC} from \"../../redux-store/app-reducer\";\r\nimport s from './BasicBlock.module.css'\r\n\r\nexport const Input = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const [userName, setUserName] = useState<string>('')\r\n\r\n    const onInputChange =useCallback( (e: ChangeEvent<HTMLInputElement>) => {\r\n        let userName = e.currentTarget.value.trim()\r\n        setUserName(userName)\r\n    },[])\r\n\r\n    const onEnterPress = useCallback((e: KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n            dispatch(findUserDataTC(userName))\r\n            dispatch(getReposTC(userName, 1))\r\n            dispatch(catchErrorAC({error: false}))\r\n        }\r\n    },[dispatch, userName])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TextField\r\n                    onKeyPress={onEnterPress}\r\n                    onChange={onInputChange}\r\n                    className={s.textField}\r\n                    size={'small'}\r\n                    placeholder={'Enter GitHub username'}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\"\r\n                                                        className={s.searchIcon}><SearchIcon/></InputAdornment>,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport s from './BasicBlock.module.css'\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport {Input} from \"./Input\";\r\n\r\n\r\nexport const BasicBlock = React.memo(() => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div>\r\n                <GitHubIcon fontSize=\"large\" className={s.gitGubIcon}/>\r\n            </div>\r\n            <Input/>\r\n        </div>\r\n    )\r\n})","import React from 'react';\nimport s from './UserBlock.module.css'\nimport img from './common/git-removebg-preview.png'\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport GroupIcon from '@material-ui/icons/Group';\n\ntype UserBlockType = {\n    avatar_url: string\n    name: string\n    countFollowers: number | string\n    countFollowing: number | string\n    login: string\n    html_url: string\n}\nexport const UserBlock = React.memo<UserBlockType>(({\n                                                        avatar_url, name, countFollowers,\n                                                        countFollowing, login, html_url\n                                                    }) => {\n\n    return (\n        <div className={s.userBlock}>\n            <div className={s.userInfo}>\n                <div className={s.blockAvatar}><img src={avatar_url} className={s.avatar} alt={'Avatar'}/></div>\n                <div className={s.description}>\n                    <div className={s.name}>\n                        <h2>{name}</h2>\n                    </div>\n                    <div className={s.login}>\n                        <a href={html_url} className={s.hrefLogin}>{login}</a>\n                    </div>\n                    <div className={s.follow}>\n                        <div className={s.personIcon}>\n                            <div><GroupIcon fontSize=\"small\"/></div>\n                            {countFollowers} followers\n                        </div>\n                        <div className={s.personIcon}>\n                            <div><PersonIcon fontSize=\"small\"/></div>\n                            {countFollowing} following\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n})\n\n\n\n\n","import React, {useEffect} from 'react';\r\nimport {createStyles, makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getReposTC} from \"../../redux-store/RepositoryReducer\";\r\nimport {AppStateType} from \"../../redux-store/store\";\r\nimport {setPageAC, setPageCountAC} from \"../../redux-store/app-reducer\";\r\nimport s from './pagination.module.css'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > * + *': {\r\n                marginTop: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport const PaginationControlled = React.memo(() => {\r\n\r\n    const {public_repos, login} = useSelector((state: AppStateType) => state.header)\r\n    const {pageCount, page} = useSelector((state: AppStateType) => state.app)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const classes = useStyles();\r\n    const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        dispatch(getReposTC(login, value))\r\n        dispatch(setPageAC({page: value}))\r\n    };\r\n    useEffect(() => {\r\n        dispatch(setPageCountAC({pageCount: Math.ceil(public_repos / 5)}))\r\n    }, [dispatch, public_repos])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={s.rootDiv}>\r\n                <Typography>{public_repos} items </Typography>\r\n                <Pagination count={pageCount} page={page} onChange={handleChange}/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n","import React from \"react\";\r\nimport style from \"./RepositoryBlock.module.css\";\r\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\r\nimport {InitialStateReposPropsType} from \"../../../redux-store/RepositoryReducer\";\r\nimport {PaginationControlled} from \"../../Pagination/Pagination\";\r\n\r\ntype RepositoryBlockType = {\r\n    status: string\r\n    public_repos: number\r\n    dataRepos: InitialStateReposPropsType\r\n}\r\nexport const RepositoryBlock = React.memo<RepositoryBlockType>(({status, public_repos, dataRepos}) => {\r\n\r\n    return (\r\n        <div className={style.repositoriesBlock}>\r\n            {status === 'succeeded' && (\r\n                <div className={style.rep}>\r\n                    {dataRepos.length > 0\r\n                        ? <div className={style.repositories}>Repositories({public_repos})</div>\r\n                        : <div className={style.emptyList}><CancelPresentationIcon fontSize={'large'}/>Repository list is\r\n                            empty</div>}\r\n                    {\r\n                        dataRepos.map((item, index) =>\r\n                            <div key={index} className={style.listRepos}>\r\n                                <a className={style.hrefNameRepositories} href={item.html_url}>\r\n                                    <div>{item.name}</div>\r\n                                </a>\r\n                                {item.description}\r\n                            </div>)\r\n                    }\r\n                    <div className={style.pagination}><PaginationControlled/></div>\r\n                </div>)}\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './UserInfo.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {UserBlock} from \"./User/UserBlock\";\r\nimport {AppStateType} from \"../../redux-store/store\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport {RepositoryBlock} from \"./Repository/RepositoryBlock\";\r\nimport {initialStateHeaderReducerPropsType} from \"../../redux-store/UserReducer\";\r\nimport {InitialStateReposPropsType} from \"../../redux-store/RepositoryReducer\";\r\n\r\ntype UserInfoType = {\r\n    status: string\r\n}\r\nexport const UserInfo = React.memo<UserInfoType>(({status}) => {\r\n\r\n    const array = useSelector<AppStateType, InitialStateReposPropsType>(state => state.repos)\r\n    const {public_repos} = useSelector((state: AppStateType) => state.header)\r\n    const {...user} = useSelector<AppStateType, initialStateHeaderReducerPropsType>((state) => state.header)\r\n\r\n    const countUsers = (users: number) => {\r\n        return users.toString().length >= '1000'.length ? (users / 1000).toFixed(1) + 'k' : users\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {status === 'idle' && (<div className={s.count}>\r\n                    <div className={s.startSearch}>\r\n                        <SearchIcon fontSize=\"large\"/>\r\n                        Start with searching a GitHub user\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {status === 'succeeded' && (\r\n                <div className={s.all}>\r\n                    <UserBlock name={user.name}\r\n                               avatar_url={user.avatar_url}\r\n                               countFollowers={countUsers(user.followers)}\r\n                               countFollowing={countUsers(user.following)}\r\n                               html_url={user.html_url}\r\n                               login={user.login}/>\r\n                    <RepositoryBlock public_repos={public_repos} status={status} dataRepos={array}/>\r\n                </div>)}\r\n\r\n            {status === 'failed' && <div className={s.count}>\r\n                <div className={s.error}>\r\n                    <PersonIcon fontSize=\"large\"/>\r\n                    User not found\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n","import React from 'react';\nimport s from './App.module.css'\nimport {BasicBlock} from \"./commponents/Header/BasicBlock\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"./redux-store/store\";\nimport {UserInfo} from './commponents/UserInfo/UserInfo';\n\n\nexport const App = () => {\n    const {status} = useSelector((state: AppStateType) => state.app)\n    return (\n        <div className={s.app}>\n            <BasicBlock/>\n            {status === 'loading' && <LinearProgress/>}\n            <div>\n                <UserInfo status={status}/>\n            </div>\n        </div>\n    );\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport {headerReducer} from \"./UserReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {userBlockReducer} from \"./RepositoryReducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    header: headerReducer,\r\n    repos: userBlockReducer,\r\n    app: appReducer,\r\n})\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n//export const _store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunk)})\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux-store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"UserBlock_userBlock__2sCPi\",\"userInfo\":\"UserBlock_userInfo__ajLe4\",\"blockAvatar\":\"UserBlock_blockAvatar__ADLBC\",\"avatar\":\"UserBlock_avatar__3sQwh\",\"description\":\"UserBlock_description__2r9Ja\",\"name\":\"UserBlock_name__hP1rQ\",\"login\":\"UserBlock_login__3hYBE\",\"hrefLogin\":\"UserBlock_hrefLogin__1iK98\",\"follow\":\"UserBlock_follow__11DKK\",\"personIcon\":\"UserBlock_personIcon__2crpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rep\":\"RepositoryBlock_rep__iIt8B\",\"repositoriesBlock\":\"RepositoryBlock_repositoriesBlock__1KcSh\",\"listRepos\":\"RepositoryBlock_listRepos__1Tyaw\",\"repositories\":\"RepositoryBlock_repositories__3gw-5\",\"hrefNameRepositories\":\"RepositoryBlock_hrefNameRepositories__1q-5z\",\"emptyList\":\"RepositoryBlock_emptyList__cyXob\",\"pagination\":\"RepositoryBlock_pagination__3zudw\",\"all\":\"RepositoryBlock_all__2q1U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BasicBlock_header__3PonS\",\"gitGubIcon\":\"BasicBlock_gitGubIcon__jGfg_\",\"searchIcon\":\"BasicBlock_searchIcon__2B5_b\",\"textField\":\"BasicBlock_textField__34uDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"UserInfo_count__BOcEK\",\"startSearch\":\"UserInfo_startSearch__2b1Fm\",\"all\":\"UserInfo_all__acZFk\",\"error\":\"UserInfo_error__16sQ3\",\"userInfo\":\"UserInfo_userInfo__3_999\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1ZNxU\",\"userInfo\":\"App_userInfo__1i6i3\",\"searching\":\"App_searching__3PaiG\",\"loader\":\"App_loader__14O0E\",\"spin\":\"App_spin__3SC5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootDiv\":\"pagination_rootDiv__3HtvN\"};"],"sourceRoot":""}